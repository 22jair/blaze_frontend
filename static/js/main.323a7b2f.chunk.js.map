{"version":3,"sources":["components/CustomPagination.jsx","utils/entity.jsx","service/BlazeService.jsx","context/OrderContext.jsx","tables/OrderProductTable.jsx","modals/OrderModal.jsx","filters/OrderFilter.jsx","pages/order/Index.jsx","pages/order/OrderProduct.jsx","modals/ProductModal.jsx","filters/ProductFilter.jsx","pages/product/Index.jsx","navigation/routes.jsx","navigation/Router.jsx","navigation/links.jsx","hooks/useOrder.jsx","App.js","index.js"],"names":["itemRender","current","type","originalElement","CustomPagination","total","onChange","defaultCurrent","paginateParamsInitialValues","pageNumber","pageSize","sortBy","orderBy","category","name","customer","status","paginateRequestInitialValues","totalItems","paginate","totalPages","productInitialValues","id","unitPrice","orderInitialValues","orderNumber","date","subTotal","totalTaxes","totalAmount","taxes","cityTax","countryTax","stateTax","federalTax","productOrderList","BlazeService","axios","create","baseURL","OrderContext","React","createContext","OrderProductTable","onClickDelet","onClickEdit","isEdit","dataSource","size","className","actions","columns","title","dataIndex","render","text","item","product","push","width","onClick","rowKey","pagination","OrderModal","modalVisible","handleCancelModal","useContext","state","removeItem","addItem","addCustomer","saveOrder","useState","products","setProducts","quantity","setItem","modalLoading","setModalLoading","useEffect","getProducts","a","get","request","data","visible","confirmLoading","onCancel","footer","sm","lg","span","Item","label","e","target","value","showSearch","find","p","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","map","Option","offset","min","max","defaultValue","style","bordered","length","message","error","then","success","catch","err","finally","loading","block","Search","Input","Select","OrderFilter","layout","md","placeholder","allowClear","onSearch","toString","Title","Typography","Order","useHistory","clearOrder","tableLoading","setTableLoading","orders","setOrders","paginateParams","setPaginateParams","paginateRequest","setPaginateRequest","setModalVisible","key","r","totalAmounts","toFixed","order","to","fecthOrdersPaginate","paginateUrl","console","log","content","handleOnChangePaginate","page","level","justify","bool","initialItem","OrderProduct","useParams","history","setOrder","updateStatus","deleteItem","ServiceAddItem","setLoading","isEditItem","setIsEditItem","isModalVisible","setIsModalVisible","fetchOrder","showModalItem","confirmOrderStatus","Modal","confirm","icon","QuestionCircleOutlined","okText","cancelText","onOk","fetchUpdateOrder","fetchDeleteItem","backgroundColor","border","productOrderNumber","color","Object","keys","validateMessages","required","isRequired","ProductModal","form","fecthProduct","initialValues","requiredMark","onFinish","hidden","rules","Group","Button","htmlType","ProductFilter","routes","path","component","Form","useForm","productos","setIsEdit","record","handleShowModal","fecthProductsPaginate","objectProduct","put","post","setFieldsValue","resetFields","Router","i","exact","links","useOrder","setState","generateTaxes","twoDecimals","n","parseFloat","currentItem","cost","payload","filter","currentOrder","currentOrden","delete","Header","Layout","Content","BlazeCliente","theme","mode","defaultSelectedKeys","l","padding","App","orderState","Provider","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.323a7b2f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Pagination, Button } from \"antd\";\r\n\r\nconst itemRender = (current, type, originalElement) => {\r\n    if (type === \"prev\") return <Button>Previous</Button>;\r\n    if (type === \"next\") return <Button>Next</Button>;\r\n    return originalElement;\r\n  };\r\n\r\nexport const CustomPagination = ({total, onChange}) => {\r\n  return (\r\n    <Pagination\r\n      defaultCurrent={1}\r\n      total={total  * 10}\r\n      itemRender={itemRender}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\n\r\n","export const paginateParamsInitialValues = {\r\n  pageNumber: 0,\r\n  pageSize: 4,\r\n  sortBy: \"id\",\r\n  orderBy: 0,\r\n  category: null,\r\n  name: null,\r\n  customer: null,\r\n  status: null\r\n};\r\n\r\nexport const paginateRequestInitialValues = {\r\n  totalItems: 0,\r\n  paginate: { totalPages: 1 },\r\n};\r\n\r\nexport const productInitialValues = {\r\n  id: \"\",\r\n  name: \"\",\r\n  category: \"Cookies\",\r\n  unitPrice: 0,\r\n  status: true,\r\n};\r\n\r\nexport const orderInitialValues = {\r\n  id: \"\",\r\n  orderNumber: 0,\r\n  status: 'Pending',\r\n  date: \"\",\r\n  customer: \"\",\r\n  subTotal: 0.0,\r\n  totalTaxes: 0.0,\r\n  totalAmount: 0.0,\r\n  taxes:{\r\n    cityTax: 0.00,\r\n    countryTax: 0.00,\r\n    stateTax: 0.00,\r\n    federalTax: 0.00,\r\n  },\r\n  productOrderList: []\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst BlazeService = axios.create({\r\n    // baseURL: \"http://localhost:8080/\",\r\n    baseURL: \"https://blaze-services.herokuapp.com/\",\r\n});\r\n\r\nexport default BlazeService;","import React from 'react';\r\n\r\nconst OrderContext = React.createContext({});\r\n\r\nexport default OrderContext;\r\n","import React from \"react\";\r\nimport { Button, Table, Space } from \"antd\";\r\n\r\nconst OrderProductTable = ({\r\n  onClickDelet = () => {},\r\n  onClickEdit = () => {},\r\n  isEdit = false,\r\n  dataSource = [],\r\n  size = \"middle\",\r\n  className = \"\",\r\n  actions = true,\r\n}) => {\r\n  let columns = [\r\n    { title: \"N°\", dataIndex: \"productOrderNumber\" },\r\n    { title: \"Name\", render: (text, item) => item.product.name },\r\n    { title: \"Quantity\", dataIndex: \"quantity\" },\r\n    { title: \"Unit Price\", render: (text, item) => item.product.unitPrice },\r\n    { title: \"Cost\", dataIndex: \"cost\" },\r\n  ];\r\n\r\n  actions &&\r\n    columns.push({\r\n      title: \"Action\",\r\n      width: \"15%\",\r\n      render: (text, item) => (\r\n        <Space size=\"middle\">\r\n          {isEdit ? (\r\n            <Button type=\"link\" onClick={() => onClickEdit(item)}>\r\n              Edit\r\n            </Button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Button type=\"link\" onClick={() => onClickDelet(item)}>\r\n            Delete\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    });\r\n\r\n  return (\r\n    <Table\r\n      rowKey=\"productOrderNumber\"\r\n      columns={columns}\r\n      dataSource={dataSource}\r\n      pagination={false}\r\n      size={size}\r\n      className={className}\r\n    />\r\n  );\r\n};\r\n\r\nexport default OrderProductTable;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport BlazeService from \"../service/BlazeService\";\r\nimport OrderContext from \"../context/OrderContext\";\r\nimport OrderProductTable from \"../tables/OrderProductTable\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Select,  \r\n  Descriptions,\r\n  InputNumber,\r\n  message,\r\n} from \"antd\";\r\n\r\n\r\nconst OrderModal = ({\r\n  modalVisible,\r\n  handleCancelModal  \r\n}) => {\r\n  const { state, removeItem, addItem, addCustomer, saveOrder } =\r\n    useContext(OrderContext);\r\n  const [products, setProducts] = useState([]);\r\n  const [item, setItem] = useState({ product: {}, quantity: 1 });\r\n  const  [modalLoading, setModalLoading] = useState(false)\r\n \r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  const getProducts = async () => {\r\n    const request = await BlazeService.get(\"product/status\");\r\n    setProducts(request.data);\r\n  };\r\n\r\n  const handleSelect = (value) => {\r\n    const product = products.find((p) => p.id === value);\r\n    setItem({ ...item, product: { ...product } });\r\n  };\r\n\r\n  const handleQuantity = (quantity) => setItem({ ...item, quantity });\r\n  const handleAddItem = () => addItem(item);\r\n\r\n  const handleSumit = () => {\r\n    \r\n    if (state.customer.length === 0 || state.customer === \"\")\r\n      return message.error(`Error: Customer is required!`);\r\n    if (state.productOrderList.length <= 0)\r\n      return message.error(`Error: Insert at least one Product`);\r\n\r\n    setModalLoading(true)\r\n    saveOrder()\r\n      .then((e) => {\r\n        handleCancelModal(true)        \r\n        message.success(`Success!, Created Order`, 5);\r\n      })\r\n      .catch((err) =>  message.error(`Error: ${err}`))\r\n      .finally( () => setModalLoading(false))          \r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={\"Create Order\"}\r\n      visible={modalVisible}\r\n      confirmLoading={modalLoading}\r\n      onCancel={handleCancelModal}\r\n      width={1000}\r\n      footer={null}\r\n    >\r\n      <Row>\r\n        <Col sm={24} lg={15} className={\"mb-20\"}>\r\n          <Row>\r\n            <Col span={24}>\r\n              <Form.Item label=\"Customer\">\r\n                <Input\r\n                  type=\"text\"\r\n                  onChange={(e) => addCustomer(e.target.value)}\r\n                  value={state.customer}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Product  \">\r\n                <Select\r\n                  showSearch\r\n                  onChange={handleSelect}\r\n                  optionFilterProp=\"name\"\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {products.map((p) => (\r\n                    <Select.Option key={p.id} value={p.id}>\r\n                      {p.name}\r\n                    </Select.Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={7} offset={1}>\r\n              <Form.Item label=\"Quantity\">\r\n                <InputNumber\r\n                  min={1}\r\n                  max={999}\r\n                  defaultValue={1}\r\n                  onChange={(value) => handleQuantity(value)}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={4} offset={1}>\r\n              <Button\r\n                type=\"primary\"\r\n                style={{ width: \"100%\" }}\r\n                onClick={handleAddItem}\r\n              >\r\n                Add\r\n              </Button>\r\n            </Col>\r\n            <Col span={24}>\r\n              <OrderProductTable onClickDelet={removeItem} dataSource={state.productOrderList}  size=\"small\" />             \r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col sm={24} lg={8} offset={1} className={\"mb-20\"}>\r\n          <Descriptions title=\"Taxes\" bordered>\r\n            <Descriptions.Item span={3} label=\"Sub Total\">\r\n              {state.subTotal}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item span={3} label=\"Taxes\">\r\n              <h4 style={{ width: \"100%\" }}>cityTax: {state.taxes.cityTax}</h4>\r\n              <h4 style={{ width: \"100%\" }}>\r\n                countryTax: {state.taxes.countryTax}\r\n              </h4>\r\n              <h4 style={{ width: \"100%\" }}>\r\n                stateTax: {state.taxes.stateTax}\r\n              </h4>\r\n              <h4 style={{ width: \"100%\" }}>\r\n                federalTax: {state.taxes.federalTax}\r\n              </h4>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item span={3} label=\"Total Taxes\">\r\n              {state.totalTaxes}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item span={3} label=\"Total\">\r\n              {state.totalTaxes + state.subTotal}\r\n            </Descriptions.Item>\r\n          </Descriptions>\r\n        </Col>\r\n        <Col span={8} offset={8}>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={handleSumit}\r\n            loading={modalLoading}\r\n            block\r\n          >\r\n            Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default OrderModal;\r\n","import React from \"react\";\r\nimport { Row, Col, Form, Select, Input } from \"antd\";\r\n\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\n\r\nconst OrderFilter = ({ onChange }) => {\r\n  return (\r\n    <Form layout={\"horizontal\"}>\r\n      <Row>\r\n        <Col sm={24} md={{ span: 6 }}>\r\n          <Form.Item>\r\n            <Search\r\n              placeholder=\"Search Customer\"\r\n              allowClear\r\n              onSearch={(value) => onChange(value.toString(), \"customer\")}\r\n              \r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col sm={8} md={{ span: 5, offset: 1 }}>\r\n          <Form.Item label=\"SortBy\">\r\n            <Select\r\n              defaultValue=\"id\"\r\n              style={{ width: 120 }}\r\n              onChange={(value) => onChange(value, \"sortBy\")}\r\n              placeholder=\"Select SortBy\"\r\n            >\r\n              <Option value=\"id\">Id</Option>\r\n              <Option value=\"customer\">Customer</Option>\r\n              <Option value=\"status\">Status</Option>\r\n              <Option value=\"date\">Date</Option>\r\n              <Option value=\"totalAmounts\">Total</Option>\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col sm={8} md={{ span: 5, offset: 0 }}>\r\n          <Form.Item label=\"OrderBy\">\r\n            <Select\r\n              defaultValue={0}\r\n              style={{ width: 120 }}\r\n              onChange={(value) => onChange(value, \"orderBy\")}\r\n              placeholder=\"Select OrderBy\"\r\n            >\r\n              <Option value={0}>---</Option>\r\n              <Option value={1}>Ascending</Option>\r\n              <Option value={2}>Descending</Option>\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col sm={8} md={{ span: 7, offset: 0 }}>\r\n          <Form.Item label=\"Status\">\r\n            <Select\r\n              defaultValue={null}\r\n              style={{ width: 120 }}\r\n              onChange={(value) => onChange(value, \"status\")}\r\n              placeholder=\"Select Status\"\r\n            >\r\n              <Option value={null}>---</Option>\r\n              <Option value={\"Pending\"}>Pending</Option>\r\n              <Option value={\"Completed\"}>Completed</Option>\r\n              <Option value={\"Rejected\"}>Rejected</Option>\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default OrderFilter;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Typography, Button, Row, Col, Table, Space } from \"antd\";\r\nimport { CustomPagination } from \"./../../components/CustomPagination\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  paginateParamsInitialValues,\r\n  paginateRequestInitialValues,\r\n} from \"./../../utils/entity\";\r\nimport OrderModal from \"../../modals/OrderModal\";\r\nimport OrderFilter from \"../../filters/OrderFilter\";\r\nimport BlazeService from \"./../../service/BlazeService\";\r\nimport OrderContext from \"../../context/OrderContext\";\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function Order() {\r\n\r\n  const history = useHistory();\r\n  const { clearOrder } = useContext(OrderContext);\r\n  const [modalLoading, setModalLoading] = useState(false);\r\n  const [tableLoading, setTableLoading] = useState(false);\r\n  const [orders, setOrders] = useState([]);\r\n  const [paginateParams, setPaginateParams] = useState(paginateParamsInitialValues);\r\n  const [paginateRequest, setPaginateRequest] = useState(paginateRequestInitialValues);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const columns = [\r\n    { title: \"N°\", dataIndex: \"orderNumber\", key: \"orderNumber\" },\r\n    { title: \"Customer\", dataIndex: \"customer\", key: \"customer\" },\r\n    { title: \"Status\", dataIndex: \"status\", key: \"status\" },\r\n    { title: \"Date\", dataIndex: \"date\", key: \"date\" },\r\n    { title: \"Total\", key: \"totalAmounts\", render: (r) => r.totalAmounts.toFixed(2)  },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, order) => (\r\n        <Space size=\"middle\">\r\n          <Link to={`/orders/${order.id}`}>Edit</Link>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fecthOrdersPaginate();\r\n  }, [paginateParams]); \r\n\r\n  const fecthOrdersPaginate = async () => {\r\n    setTableLoading(true);\r\n    const { pageNumber, pageSize, sortBy, orderBy, customer, status } = paginateParams;\r\n    const paginateUrl = `paginate?pageNumber=${pageNumber}&pageSize=${pageSize}&sortBy=${sortBy}&orderBy=${orderBy}&customer=${customer}&status=${status}`;\r\n    const request = await BlazeService.get(\"order/\" + paginateUrl);\r\n    if (request.status === 200) {\r\n      console.log(request.data.paginate.content);\r\n      setOrders(request.data.paginate.content);\r\n      setPaginateRequest(request.data);\r\n    }\r\n    setTableLoading(false);\r\n  };\r\n\r\n  const handleOnChangePaginate = async (page) =>\r\n    setPaginateParams({ ...paginateParams, pageNumber: page - 1 });\r\n  \r\n  const handlePaginateParamsChange = (e, type) =>\r\n    setPaginateParams({ ...paginateParams, [type]: e });\r\n\r\n  const handleCancelModal = (bool = false) => {\r\n    clearOrder()\r\n    setModalVisible(false);     \r\n    if(bool)  fecthOrdersPaginate()    \r\n  }\r\n  const handleShowModal = () => {\r\n    setModalVisible(true);\r\n    clearOrder()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Title level={2}>Orders ({paginateRequest.totalItems}) </Title>     \r\n      <Row>\r\n        <Col sm={24} lg={20}>\r\n          <OrderFilter onChange={handlePaginateParamsChange} />\r\n        </Col>\r\n        <Col sm={24} lg={4}>\r\n          <Button type=\"primary\" block  onClick={() => handleShowModal(false)}>\r\n            Create Order\r\n          </Button>\r\n        </Col>\r\n        <Col span={24} className={\"mb-20\"}>\r\n          <Table\r\n            loading={tableLoading}\r\n            rowKey=\"id\"\r\n            columns={columns}\r\n            dataSource={orders}\r\n            pagination={false}\r\n          />\r\n        </Col>\r\n        <Col span={24}>\r\n          <Row justify=\"end\">\r\n            <CustomPagination\r\n              total={paginateRequest.paginate.totalPages}\r\n              onChange={handleOnChangePaginate}\r\n            />\r\n          </Row>\r\n        </Col>         \r\n      </Row>\r\n      {/* Modal Create */}\r\n      <OrderModal  modalVisible={modalVisible} modalLoading={modalLoading} handleCancelModal={handleCancelModal}/>\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Descriptions,\r\n  Modal,\r\n  message,\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n} from \"antd\";\r\nimport { orderInitialValues } from \"./../../utils/entity\";\r\nimport BlazeService from \"../../service/BlazeService\";\r\nimport OrderProductTable from \"../../tables/OrderProductTable\";\r\nimport OrderContext from \"../../context/OrderContext\";\r\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Title } = Typography;\r\nconst initialItem = { product: {}, quantity: 1 };\r\n\r\nfunction OrderProduct() {\r\n  let { id } = useParams();\r\n  const history = useHistory();\r\n  const {\r\n    state,\r\n    setOrder,\r\n    updateStatus,\r\n    deleteItem,\r\n    ServiceAddItem,\r\n    saveOrder,\r\n  } = useContext(OrderContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [isEditItem, setIsEditItem] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [item, setItem] = useState(initialItem);\r\n\r\n  useEffect(() => {\r\n    fetchOrder();\r\n    getProducts();\r\n  }, []);\r\n\r\n  const fetchOrder = async () => {\r\n    setLoading(true);\r\n    const request = await BlazeService.get(\"order/\" + id);\r\n    if (request.status === 200) {\r\n      if (request.data.productOrderList[0] == null)\r\n        request.data.productOrderList = [];\r\n      setOrder(request.data);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const getProducts = async () => {\r\n    const request = await BlazeService.get(\"product/status\");\r\n    setProducts(request.data);\r\n  };\r\n\r\n  const showModalItem = (item = null) => {\r\n    if (item != null) {\r\n      setItem(item);\r\n      setIsEditItem(true);\r\n    } else {\r\n      setItem(initialItem);\r\n      setIsEditItem(false);\r\n    }\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const confirmOrderStatus = (state) => {\r\n    return Modal.confirm({\r\n      title: `Confirm ${state === \"Completed\" ? \"Complete\" : \"Recject\"} Order?`,\r\n      icon: <QuestionCircleOutlined />,\r\n      okText: \"Ok\",\r\n      cancelText: \"Cancel\",\r\n      onOk: () => fetchUpdateOrder(state),\r\n    });\r\n  };\r\n\r\n  const confirmDeleteItem = (item) => {\r\n    return Modal.confirm({\r\n      title: `Delete Item ${item.productOrderNumber}?`,\r\n      icon: <QuestionCircleOutlined />,\r\n      okText: \"Ok\",\r\n      cancelText: \"Cancel\",\r\n      onOk: () => fetchDeleteItem(item),\r\n    });\r\n  };\r\n\r\n  const fetchDeleteItem = (item) => {\r\n    deleteItem(item)\r\n      .then(() => {\r\n        fetchOrder();\r\n        message.success(`Success!, Item Delated`, 5);\r\n      })\r\n      .catch((err) => {\r\n        message.error(`Error!, ${err}`, 5);\r\n      });\r\n  };\r\n\r\n  const fetchUpdateOrder = (state) => {\r\n    updateStatus(state)\r\n      .then(() => {\r\n        fetchOrder();\r\n        message.success(`Success!, Order Updated`, 5);\r\n      })\r\n      .catch((err) => {\r\n        message.error(`Error!, ${err}`, 5);\r\n      });\r\n  };\r\n\r\n  // Modal Item\r\n  const handleSelect = (value) => {\r\n    const product = products.find((p) => p.id === value);\r\n    setItem({ ...item, product: { ...product } });\r\n  };\r\n  const handleQuantity = (quantity) => setItem({ ...item, quantity });\r\n\r\n  const handleFetchItem = () => {\r\n    if (Object.keys(item.product).length === 0)\r\n      return message.error(`Error: Item is required!`);\r\n    if (item.quantity === 0)\r\n      return message.error(`Error: Quantity can't be lees then 0!`);\r\n\r\n    isEditItem\r\n      ? saveOrder(true, item)\r\n          .then(() => {\r\n            fetchOrder();\r\n            message.success(`Success!, Item Updated`, 5);\r\n            setIsModalVisible(false);\r\n          })\r\n          .catch((err) => {\r\n            message.error(`Error!, ${err}`, 5);\r\n          })\r\n      : ServiceAddItem(item)\r\n          .then(() => {\r\n            fetchOrder();\r\n            message.success(`Success!, Item Added`, 5);\r\n            setIsModalVisible(false);\r\n          })\r\n          .catch((err) => {\r\n            message.error(`Error!, ${err}`, 5);\r\n          });\r\n  };\r\n\r\n  if (loading) return <h1>Loading....</h1>;\r\n\r\n  if (error) return <h1>Id not found</h1>;\r\n\r\n  console.log(state)\r\n\r\n  return (\r\n    <>\r\n      <Row justify={\"space-between\"}>\r\n        <Title level={2}>Orders N° 1 </Title>\r\n        <Button\r\n          type=\"primary\"\r\n          size={\"large\"}\r\n          style={{ backgroundColor: \"#3f3f3f\", border: \"1px solid #ccc\" }}\r\n          onClick={() => history.push(\"/orders\")}\r\n        >\r\n          Back\r\n        </Button>\r\n      </Row>\r\n      <Row>\r\n        <Descriptions bordered className={\"mb-20\"}>\r\n          <Descriptions.Item span={3} label=\"Customer\">\r\n            {state.customer}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item span={3} label=\"Status\">\r\n            {state.status}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item span={3} label=\"Date\">\r\n            {state.date}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </Row>\r\n      <Row>\r\n        <Col span={24}>\r\n          <OrderProductTable\r\n            onClickDelet={confirmDeleteItem}\r\n            onClickEdit={showModalItem}\r\n            isEdit={true}\r\n            dataSource={state.productOrderList}\r\n            className={\"mb-20\"}\r\n            actions={ state.status === \"Pending\" ? true : false }\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n      {state.status === \"Pending\" && (\r\n        <Col sm={24} md={8} offset={21} className={\"mb-20\"}>\r\n          <Button type=\"primary\" onClick={() => showModalItem()}>\r\n            Add Item+\r\n          </Button>\r\n        </Col>\r\n      )}\r\n        <Col sm={24} md={8} offset={16} className={\"mb-20\"}>\r\n          <Descriptions title=\"Taxes\" bordered>\r\n            <Descriptions.Item span={3} label=\"Sub Total\">\r\n              {state.subTotal}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item span={3} label=\"Taxes\">\r\n              <h4 style={{ width: \"100%\" }}>cityTax: {state.taxes.cityTax}</h4>\r\n              <h4 style={{ width: \"100%\" }}>\r\n                countryTax: {state.taxes.countryTax}\r\n              </h4>\r\n              <h4 style={{ width: \"100%\" }}>\r\n                stateTax: {state.taxes.stateTax}\r\n              </h4>\r\n              <h4 style={{ width: \"100%\" }}>\r\n                federalTax: {state.taxes.federalTax}\r\n              </h4>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item span={3} label=\"Total Taxes\">\r\n              {state.totalTaxes}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item span={3} label=\"Total\">\r\n              {state.totalTaxes + state.subTotal}\r\n            </Descriptions.Item>\r\n          </Descriptions>\r\n        </Col>\r\n        {state.status === \"Pending\" && (\r\n          <Col sm={24} md={8} offset={16} className={\"mb-20\"}>\r\n            <Row justify={\"space-around\"}>\r\n              <Button\r\n                style={{ backgroundColor: \"#489766\", color: \"white\" }}\r\n                onClick={() => confirmOrderStatus(\"Completed\")}\r\n              >\r\n                Complete Order{\" \"}\r\n              </Button>\r\n              <Button\r\n                style={{ backgroundColor: \"tomato\", color: \"white\" }}\r\n                onClick={() => confirmOrderStatus(\"Rejected\")}\r\n              >\r\n                {\" \"}\r\n                Reject Order{\" \"}\r\n              </Button>\r\n            </Row>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n\r\n      {/* Edit / Add  */}\r\n      <Modal\r\n        title={isEditItem ? \"Edit item\" : \"Add Item\"}\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        width={600}\r\n        footer={null}\r\n      >\r\n        <Row>\r\n          <Col span={11}>\r\n            <Form.Item label=\"Product  \">\r\n              <Select\r\n                showSearch\r\n                onChange={handleSelect}\r\n                value={item.product.name}\r\n                optionFilterProp=\"name\"\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                  0\r\n                }\r\n              >\r\n                {!isEditItem ? (\r\n                  products.map((p) => (\r\n                    <Select.Option key={p.id} value={p.id}>\r\n                      {p.name}\r\n                    </Select.Option>\r\n                  ))\r\n                ) : (\r\n                  <Select.Option key={item.product.id} value={item.product.id}>\r\n                    {item.product.name}\r\n                  </Select.Option>\r\n                )}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={7} offset={1}>\r\n            <Form.Item label=\"Quantity\">\r\n              <InputNumber\r\n                min={1}\r\n                max={999}\r\n                defaultValue={1}\r\n                value={item.quantity}\r\n                onChange={(value) => handleQuantity(value)}\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={4} offset={1}>\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ width: \"100%\" }}\r\n              onClick={handleFetchItem}\r\n            >\r\n              {isEditItem ? \"Edit\" : \"Add\"}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderProduct;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Radio,\r\n  InputNumber  \r\n} from \"antd\";\r\n\r\nconst validateMessages = {\r\n  required: \"${label} it's required!\",\r\n};\r\n\r\nconst isRequired = { required: true };\r\n\r\nconst ProductModal = ({form, isEdit, modalLoading, modalVisible, handleCancelModal, productInitialValues, fecthProduct}) => {\r\n\r\n    return(\r\n        <Modal\r\n        title={isEdit ? \"Edit Product\" : \"Create Product\"}\r\n        visible={modalVisible}\r\n        confirmLoading={modalLoading}\r\n        onCancel={handleCancelModal}\r\n        width={400}\r\n        footer={null}\r\n      >\r\n        <Form\r\n          form={form}\r\n          validateMessages={validateMessages}\r\n          initialValues={productInitialValues}\r\n          requiredMark={true}\r\n          onFinish={fecthProduct}\r\n          layout=\"vertical\"\r\n        >\r\n          <Form.Item hidden={true} name=\"id\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item rules={[isRequired]} name=\"name\" label=\"Name\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item rules={[isRequired]} name=\"category\" label=\"Category\">\r\n            <Select>\r\n              <Select.Option value=\"Cookies\">Cookies</Select.Option>\r\n              <Select.Option value=\"Candies\">Candies</Select.Option>\r\n              <Select.Option value=\"Cakes\">Cakes</Select.Option>\r\n              <Select.Option value=\"Desserts\">Desserts</Select.Option>\r\n              <Select.Option value=\"Drinks\">Drinks</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Row>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name=\"unitPrice\"\r\n                label=\"Price $\"\r\n                rules={[ isRequired, { type: \"number\", min: 1, max: 9999, message: \"Price must be between $1 and $9999\", }]}\r\n              >\r\n                <InputNumber />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item rules={[isRequired]} name=\"status\" label=\"Status\">\r\n                <Radio.Group>\r\n                  <Radio.Button value={true}>Active</Radio.Button>\r\n                  <Radio.Button value={false}>Inactive</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }} loading={modalLoading} >\r\n              {isEdit ? \"Edit\" : \"Create\"} Product\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    )\r\n\r\n}\r\n\r\nexport default ProductModal","import React from \"react\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Select,\r\n    Input\r\n  } from \"antd\";\r\n\r\n  const { Search } = Input;\r\n  const { Option } = Select;\r\n\r\nconst ProductFilter = ({onChange}) => {\r\n\r\n    return (\r\n        <Form layout={\"horizontal\"}>\r\n        <Row>\r\n          <Col sm={24} md={{ span: 6 }}>\r\n            <Form.Item>\r\n              <Search placeholder=\"Search Name\" allowClear onSearch={(value) => onChange(value.toString(), \"name\")} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col sm={8} md={{ span: 5, offset: 1 }}>\r\n            <Form.Item label=\"SortBy\">\r\n              <Select\r\n                defaultValue=\"id\"\r\n                style={{ width: 120 }}\r\n                onChange={(value) =>\r\n                  onChange(value, \"sortBy\")\r\n                }\r\n                placeholder=\"Select SortBy\"\r\n              >\r\n                <Option value=\"id\">Id</Option>\r\n                <Option value=\"name\">Name</Option>\r\n                <Option value=\"category\">Category</Option>\r\n                <Option value=\"unitPrice\">Price</Option>\r\n                <Option value=\"status\">Status</Option>\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col sm={8} md={{ span: 5, offset: 0 }}>\r\n            <Form.Item label=\"OrderBy\" >\r\n              <Select\r\n                defaultValue={0}\r\n                style={{ width: 120 }}\r\n                onChange={(value) =>\r\n                  onChange(value, \"orderBy\")\r\n                }\r\n                placeholder=\"Select OrderBy\"\r\n              >\r\n                <Option value={0}>---</Option>\r\n                <Option value={1}>Ascending</Option>\r\n                <Option value={2}>Descending</Option>\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col sm={8} md={{ span: 7, offset: 0 }}>\r\n            <Form.Item label=\"Category\" >\r\n              <Select\r\n                defaultValue={null}\r\n                style={{ width: 120 }}\r\n                onChange={(value) =>\r\n                  onChange(value, \"category\")\r\n                }\r\n                placeholder=\"Select Category\"\r\n                \r\n              >\r\n                <Option value={null}>---</Option>\r\n                <Option value=\"Cookies\">Cookies</Option>\r\n                <Option value=\"Candies\">Candies</Option>\r\n                <Option value=\"Cakes\">Cakes</Option>\r\n                <Option value=\"Desserts\">Desserts</Option>\r\n                <Option value=\"Drinks\">Drinks</Option>\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>      \r\n        </Row>\r\n      </Form>\r\n    )\r\n\r\n}\r\n\r\nexport default ProductFilter","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Form,\r\n  message,\r\n} from \"antd\";\r\nimport { CustomPagination } from './../../components/CustomPagination'\r\nimport { paginateParamsInitialValues, paginateRequestInitialValues, productInitialValues } from './../../utils/entity'\r\nimport BlazeService from \"./../../service/BlazeService\";\r\nimport ProductModal from \"../../modals/ProductModal\";\r\nimport ProductFilter from \"../../filters/ProductFilter\";\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function Product() {\r\n\r\n  const [form] = Form.useForm();\r\n  const [modalLoading, setModalLoading] = useState(false);\r\n  const [tableLoading, setTableLoading] = useState(false);\r\n  const [productos, setProducts] = useState([]);\r\n  const [paginateParams, setPaginateParams] = useState(paginateParamsInitialValues);\r\n  const [paginateRequest, setPaginateRequest] = useState(paginateRequestInitialValues);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"N°\",\r\n      dataIndex: \"n\",\r\n      render: (text, record) => (productos.indexOf(record) + 1 + (paginateParams.pageNumber * paginateParams.pageSize)),\r\n    },\r\n    { title: \"Name\", dataIndex: \"name\" },\r\n    { title: \"Category\", dataIndex: \"category\" },\r\n    { title: \"Price\", dataIndex: \"unitPrice\" },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      render: (text, record) => (record.status ? \"Active\" : \"Inactive\"),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      render: (text, product) => (\r\n        <Button type=\"link\" onClick={() => handleShowModal(product)}>\r\n          Edit\r\n        </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fecthProductsPaginate();\r\n  }, [paginateParams]); \r\n\r\n  const fecthProductsPaginate = async () => {\r\n    setTableLoading(true);\r\n    // console.log(paginateParams);\r\n    const { pageNumber, pageSize, sortBy, orderBy, category, name } =\r\n      paginateParams;\r\n    const paginateUrl = `paginate?pageNumber=${pageNumber}&pageSize=${pageSize}&sortBy=${sortBy}&orderBy=${orderBy}&category=${category}&name=${name}`;\r\n    const request = await BlazeService.get(\"product/\" + paginateUrl);\r\n    if (request.status === 200) {      \r\n      setProducts(request.data.paginate.content);\r\n      setPaginateRequest(request.data);\r\n    }\r\n    setTableLoading(false);\r\n  };\r\n\r\n  const fecthProduct = async (objectProduct) => {\r\n    setModalLoading(true);\r\n    let request = false;\r\n    if (isEdit) {\r\n      request = await BlazeService.put(\"product\", objectProduct).catch((err) => message.error(`Error: ${err}`));\r\n    } else {\r\n      request = await BlazeService.post(\"product\", objectProduct).catch((err) => message.error(`Error: ${err}`));\r\n    }\r\n\r\n    if (request) {\r\n      message.success(`Success!, ${isEdit ? \"Edited\" : \"Created\"} Product`, 5);\r\n      fecthProductsPaginate();\r\n      handleCancelModal();\r\n    }\r\n    setModalLoading(false);\r\n  };\r\n\r\n\r\n  const handleShowModal = async (objectProduct) => {\r\n    if (objectProduct) {\r\n      setIsEdit(true);\r\n      form.setFieldsValue(objectProduct);\r\n    } else {\r\n      setIsEdit(false);\r\n    }\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleCancelModal = () => {\r\n    form.resetFields();\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleOnChangePaginate = async (page) => setPaginateParams({ ...paginateParams, pageNumber: page - 1 });\r\n\r\n  const handlePaginateParamsChange = (e, type) => setPaginateParams({ ...paginateParams, [type]: e });\r\n\r\n  return (\r\n    <>\r\n      <Title level={2}>Products ({paginateRequest.totalItems}) </Title>\r\n      <Row>\r\n        <Col sm={24} lg={20}>\r\n          <ProductFilter onChange={handlePaginateParamsChange} />\r\n        </Col>\r\n        <Col sm={24} lg={4}>\r\n          <Button type=\"primary\" block onClick={() => handleShowModal(false)}>\r\n            Create Product\r\n          </Button>\r\n        </Col>        \r\n        <Col span={24} className={\"mb-20\"}>\r\n          <Table loading={tableLoading} rowKey=\"id\" columns={columns} dataSource={productos} pagination={false}/>\r\n        </Col>\r\n        <Col span={24}>\r\n          <Row justify=\"end\">\r\n            <CustomPagination  total={paginateRequest.paginate.totalPages} onChange={handleOnChangePaginate}/>                       \r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Modal Create / Edit */}\r\n      <ProductModal\r\n        form={form}\r\n        isEdit={isEdit}\r\n        modalLoading={modalLoading}\r\n        modalVisible={modalVisible}\r\n        handleCancelModal={handleCancelModal}\r\n        productInitialValues={productInitialValues}\r\n        fecthProduct={fecthProduct}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import Order from '../pages/order/Index'\r\nimport OrderProduct from '../pages/order/OrderProduct'\r\nimport Product from './../pages/product/Index'\r\n\r\nexport const routes = [\r\n    { path: '/', component: Order},\r\n    { path: '/products', component: Product},    \r\n    { path: '/orders/:id', component: OrderProduct},    \r\n    { path: '/orders', component: Order}    \r\n]","import { Switch, Route } from \"react-router-dom\";\r\nimport { routes } from \"./routes\";\r\n\r\nconst Router = () => (\r\n  <Switch>\r\n    {routes.map((r, i) => <Route key={i} path={r.path} exact component={r.component} /> )}\r\n  </Switch>\r\n);\r\n\r\nexport default Router;\r\n","\r\nexport const links = [    \r\n    { to: '/orders', title:'Orders'},\r\n    { to: '/products', title:'Products'}        \r\n]","import { useState, useEffect } from \"react\";\r\nimport { orderInitialValues } from \"./../utils/entity\";\r\nimport BlazeService from \"../service/BlazeService\";\r\n\r\nconst useOrder = () => {\r\n  const [state, setState] = useState(orderInitialValues);\r\n\r\n  useEffect(() => {\r\n    generateTaxes();\r\n  }, [state.productOrderList]);\r\n\r\n  const addItem = ({ product, quantity }) => {\r\n    if (Object.keys(product).length === 0) return false;\r\n    if (quantity === 0) return false;\r\n\r\n    let currentItem = { product, quantity };\r\n    currentItem.productOrderNumber = state.productOrderList.length + 1;\r\n    currentItem.cost = currentItem.product.unitPrice * currentItem.quantity;\r\n\r\n    setState({\r\n      ...state,\r\n      subTotal: state.subTotal + currentItem.cost,\r\n      productOrderList: [...state.productOrderList, currentItem],\r\n    });\r\n  };\r\n\r\n  const removeItem = (payload) => {\r\n    setState({\r\n      ...state,\r\n      subTotal: state.subTotal - payload.cost,\r\n      productOrderList: state.productOrderList.filter(\r\n        (item) => item.productOrderNumber !== payload.productOrderNumber\r\n      ),\r\n    });\r\n  };\r\n\r\n  const addCustomer = (payload) => {\r\n    setState({\r\n      ...state,\r\n      customer: payload,\r\n    });\r\n  };\r\n\r\n  // Fetch\r\n  const saveOrder = async (isEdit = false, item) => {\r\n    let request = false;\r\n\r\n    if (isEdit) {\r\n      let currentOrder = { ...state };\r\n      item.cost = item.product.unitPrice * item.quantity;\r\n      currentOrder = {\r\n        ...state,\r\n        productOrderList: [\r\n          ...state.productOrderList.filter(\r\n            (i) => i.product.id !== item.product.id\r\n          ),\r\n          item,\r\n        ],\r\n      };\r\n      console.log(currentOrder);\r\n      request = await BlazeService.put(\"order\", currentOrder);\r\n    } else {\r\n      request = await BlazeService.post(\"order\", state);\r\n    }\r\n    return request;\r\n  };\r\n\r\n  // Fetch\r\n  const updateStatus = async (status) => {\r\n    const currentOrden = { ...state, status };\r\n    const request = await BlazeService.put(\"order/status\", currentOrden);\r\n    return request;\r\n  };\r\n\r\n  // Fetch\r\n  const deleteItem = async (item) => {\r\n    console.log(item);\r\n    const request = await BlazeService.delete(\r\n      `order/item?idOrder=${state.id}&idProductOrder=${item.id}`\r\n    );\r\n    return request;\r\n  };\r\n\r\n  // Fetch\r\n  const ServiceAddItem = async (item) => {\r\n    let currentOrder = { id: state.id, productOrderList: [item] };\r\n    console.log(currentOrder);\r\n    let request = await BlazeService.post(\"order/item\", currentOrder);\r\n    return request;\r\n  };\r\n\r\n  const generateTaxes = () => {\r\n    let totalTaxes = 0;\r\n    //Taxes\r\n    let cityTax = twoDecimals(state.subTotal * 0.1); // 10%\r\n    totalTaxes += cityTax;\r\n    let countryTax = twoDecimals((state.subTotal + totalTaxes) * 0.05); // 5%\r\n    totalTaxes += countryTax;\r\n    let stateTax = twoDecimals((state.subTotal + totalTaxes) * 0.08); // 8%\r\n    totalTaxes += stateTax;\r\n    let federalTax = twoDecimals((state.subTotal + totalTaxes) * 0.02); // 2%\r\n    totalTaxes += federalTax;\r\n    setState({\r\n      ...state,\r\n      totalTaxes: twoDecimals(totalTaxes),\r\n      taxes: { cityTax, countryTax, stateTax, federalTax },\r\n    });\r\n  };\r\n\r\n  const setOrder = (order) => setState(order);\r\n\r\n  const clearOrder = () => setState(orderInitialValues);\r\n\r\n  const twoDecimals = (n) => parseFloat(n.toFixed(2));\r\n\r\n  return {\r\n    addItem,\r\n    removeItem,\r\n    addCustomer,\r\n    saveOrder,\r\n    clearOrder,\r\n    setOrder,\r\n    updateStatus,\r\n    deleteItem,\r\n    ServiceAddItem,\r\n    state,\r\n  };\r\n};\r\n\r\nexport default useOrder;\r\n","import \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport Router from \"./navigation/Router\";\nimport { Layout, Menu } from \"antd\";\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport { links } from \"./navigation/links\";\n\nimport OrderContext from \"./context/OrderContext\";\nimport useOrder from \"./hooks/useOrder\";\n\nconst { Header, Content } = Layout;\n\nconst BlazeCliente = () => {  \n  return (\n    <Layout className=\"layout\">\n      <Header className=\"header\">\n        <div className=\"logo\">BLAZE</div>\n        <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={[\"0\"]}>\n          {links.map((l, i) => (\n            <Menu.Item key={i}>\n              <Link to={l.to}>{l.title}</Link>\n            </Menu.Item>\n          ))}\n        </Menu>\n      </Header>\n      <Content style={{ padding: \"50px 50px\" }}>\n        <div className=\"site-layout-content\">\n          <Router />\n        </div>\n      </Content>\n    </Layout>\n  );\n};\n\nfunction App() {\n  const orderState = useOrder()\n  return (    \n    <OrderContext.Provider value={orderState}>\n    <BrowserRouter>\n      <BlazeCliente />\n    </BrowserRouter>    \n    </OrderContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}